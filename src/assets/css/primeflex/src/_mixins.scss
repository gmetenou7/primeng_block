@mixin style-class($map, $prop, $responsive: false) {
    @each $key, $val in $map {
        .#{$key} {
            #{$prop}: #{$val} !important;
        }
    }

    @if ($responsive) {
        @each $key, $val in $breakpoints {
            @media screen and (min-width: #{$val}) {
                .#{$key + $separator} {
                    @each $key, $val in $map {
                        &#{$key} {
                            #{$prop}: #{$val} !important;
                        }
                    }
                }
            }
        }
    }
}

@mixin color-class($name, $prop, $colors, $shades) {
    @each $color in $colors {
        .#{$name}#{$color} {
            @each $shade in $shades {
                &-#{$shade} {
                    #{$prop}: var(--#{$color}-#{$shade}) !important;
                }
            }
        }
    }
}

@mixin spacing-class($name, $directions, $scales, $auto: false) {
    @each $dir, $prop in $directions {
        @for $i from 0 through length($scales) - 1 {
            .#{$name}#{$dir}-#{$i} {
                @each $propName in $prop {
                    #{$propName}: $spacer * nth($scales, $i + 1) !important;
                }
            }
        }

        @if ($auto) {
            .#{$name}#{$dir}-auto {
                @each $propName in $prop {
                    #{$propName}: auto !important;
                }
            }
        } 
    }

    @each $key, $val in $breakpoints {
        @media screen and (min-width: #{$val}) {
            @each $dir, $prop in $directions {
                @for $i from 0 through length($scales) - 1 {
                    .#{$key + $separator}#{$name}#{$dir}-#{$i} {
                        @each $propName in $prop {
                            #{$propName}: $spacer * nth($scales, $i + 1);
                        }
                    }
                }

                @if ($auto) {
                    .#{$key + $separator}#{$name}#{$dir}-auto {
                        @each $propName in $prop {
                            #{$propName}: auto;
                        }
                    }
                }
            }
        }
    }
}